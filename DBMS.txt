-- exp 3

create table comp
(
sid int,
sname char(10),
address varchar(10) );

-- Display table
desc table comp;
-- Display table attributes
desc comp;

alter table comp
add age int;

desc comp;

alter table comp
rename compop;
desc compop;

alter table compop
modify sname varchar(20);

alter table compop
drop age ;
desc compop

-- exp 3 contd. DDL Commands
-- Primary Key Constraints

create table co
(
sid int primary key ,
sname char(10),
address varchar(10),
age int check(age>19));


insert into co values (1,'asam','lal');
insert into co values (1,'ok','lalee');

-- foreign Key Constraints

create table dept
(
did int primary key,
dname char(10),
sid int,
foreign key(sid) references co(sid));

insert into dept values (4,'assdasam',2);
insert into dept values (5,'oksdas',2);

-- unique Key Constraints same as primary key

-- check constraints

create table com
(
sid int primary key ,
sname char(10),
address varchar(10),
age int check(age>19));

insert into com values (1,'asam','lal',20);
insert into com values (1,'ok','lalee',2);

-- null , not null constraints

create table com1
(
sid int ,
sname char(10),
address varchar(10) Not Null,
age int check(age>19));

insert into com1 values (1,'asam','lal',20);
insert into com1 values (1,'ok',null,2);

-- default constraints

create table com2
(
sid int ,
sname char(10) not Null);

insert into com2 values (1,'asamsda');
insert into com2 values (4,'asamas');	
insert into com2 values (45,'aasdsam');

select * from com2;
alter table com2
add address varchar(10) default 'nam';

select * from com2;

-- exp 4  DML Commands
-- insert 

create table p
(
pid int,
pname varchar(10));

insert into p values (2,'op');
select * from p;

insert into p(pid,pname) values (3,'opop');
select * from p;

insert into p values (45,'s'),(455,'sdad'),(656,'dfsad');
select * from p;

-- update table

update p
set pid=78
where pname='s';
select * from p;

-- delete table
delete from p where pid=45;
select * from p;

-- exp mo 5 string manupulation 

create table cs1
(
sid int primary key,
sname char (10),
age int,
marks int);

insert into cs1 values (1,'sam',18,99),(2,'ram',19,90),(3,'op',10,95);
select * from cs1;

create table csd
(
did int primary key,
dname char (10),
sid int,
foreign key(sid) references cs1(sid));

insert into csd values (10,'srweram',1),(20,'rdffam',2),(30,'odfp',3);
select * from csd;

update csd 
set did=69
where dname='rdffam';
select * from csd;

delete from csd where did=69 ;
select * from csd;


-- min functuion
 
select min(age) from cs1;

-- avg function
 
select avg(marks) from cs1;

-- count fnc
select count(*) from csd;

select count(*) from csd group by did;

-- string serach

select dname from csd where dname like '%m' ;

select dname from csd where dname like '_d%' ;

select dname from csd where dname like '%M' ;

select dname from csd where dname not like '%m' ;

-- exp no 6 Joins 

create table project
(
pno int primary key ,
pname char (10),
weeks int );

insert into project values (1,'pot',12),(2,'rem',10),(3,'rack',45) ;
select * from project ;

create table emp
(
eno int primary key ,
ename char (10),
sal int,
pno int,
foreign key(pno) references project (pno) );

insert into emp values (10,'padsot',2000,1),(20,'redfam',4000,2),(3,'rdfsaack',5000,3) ;
select * from emp ;

-- natural join
select * from project natural join emp;

select * from project cross join emp;

select * from project inner join emp on project.pno=emp.pno;
  
select * from project left outer join emp on project.pno=emp.pno;

select * from project right outer join emp on project.pno=emp.pno;

select * from project left outer join emp on project.pno=emp.pno
union 
select * from project right outer join emp on project.pno=emp.pno;

-- exp no 7 nested and complex

create table sale
(
ssid int primary key,
sname char(10),
scity varchar(10),
comm int );

insert into sale values (1,'aman','mum',500),(2,'amanu','mumu',5000),(3,'amano','mumo',5050) ;
select * from sale;

create table orders
(
ono int ,
pamt int,
odate int,
cid int,
ssid int,
foreign key(ssid) references sale(ssid) 
);

insert into orders values (121,454,12,5070,1),(45,54,47,574,2),(546,45,4254,50550,3) ;
select * from orders;

-- #1
select * 
from orders
where ssid =
	( select ssid
      from sale
      where sname='aman');

-- #2

select * 
from orders
where ssid IN
	( select ssid
      from sale
      where scity='mum');
      
-- #3

-- exp 8

create table cst
(
sid int,
sname char(10),
address varchar(10));

insert into cst values (1,'mam','del'),(2,'mamu','deli'),(3,'mamo','uuu');
select * from cst;

CREATE DEFINER=`root`@`localhost` PROCEDURE `new_procedure`()
BEGIN
select * from cst;
END

call lordpratima.new_procedure();

----

CREATE DEFINER=`root`@`localhost` FUNCTION `new_function`(total int) RETURNS int
    DETERMINISTIC
BEGIN
select count(*) into total from cst; 
RETURN 1;
END

select lordpratima.new_function(@sid);

-- exp 9 views 

select * from com2;

create view newcom2 as
select sid,sname from com2;

desc newcom2;

insert into newcom2 values (11,'asda'),(12,'esx'),(13,'wqer');
select * from newcom2;

update newcom2
set sid=985
where sname='esx';
select * from newcom2;

delete from newcom2 where sid=11;
select * from newcom2;

-- exp 9 triggers

create table empl 
(
emplid int not null,
fname varchar(20) not null,
lname varchar(10),
jid int,
sal int,
cm int );

insert into empl values
(1,'aa','bb',20,500,600),
(2,'aba','basdsb',2220,5020,6100),
(3,'aacxz','bdffb',80,51100,60840);


select * from empl;

create table emp_d 
(
e_d int,
sal_d int,
edttime timestamp);

CREATE DEFINER=`root`@`localhost` TRIGGER `empl_AFTER_INSERT` AFTER INSERT ON `empl` FOR EACH ROW BEGIN
INSERT INTO emp_d
VALUES(new.emplid, new.sal,now());
END

insert into empl values
(22,'abasdaa','bask',220,500,610),
(322,'aacwewxz','balb',8340,5,680);

select * from emp_d;

--ddl
create table student(
roll int,
age int,
gender char(10),
sname char(10)
);

drop table student21;

alter table student
rename student21;

alter table student21
add address varchar(10);

alter table student21
modify sname varchar(10);

alter table student21
drop gender;


select * from student;

desc student21;

-- agg and string

create table ticket(
tikno int,
name char(10),
age int,
fare int,
gender char(10)
);

select * from ticket;

select max(fare) from ticket;

select sum(fare) from ticket;

select count(*) from ticket;

insert into ticket values(1,'abc',12,200,'m'),(2,'xyz',13,100,'m');

insert into ticket values(3,'lkn',22,400,'f');

select * from ticket where name like "%n";

select * from ticket where name like "%b%";

--dml

create table employee(
eid int,
ename char(10),
eage int,
esalary int
);

select * from employee;


insert into employee values(1,'swara',18,2500),(2,'pooja',19,2100);

update employee
set esalary=2000
where ename='pooja';

delete from employee
where eid=1;

SET SQL_SAFE_UPDATES = 0;

--integrity

create table customer(
cust_no int primary key,
fname char(10) not null,
lname char(10) null,
occupation varchar(10)
);

alter table customer
add address varchar(10) default 'vasai';

insert into customer values(1,'john',null,'writer'),(2,'lee',null,'coder'),(3,'sam',null,'student');

insert into customer values(4,'kk',null,'farmer');

drop table customer;

select * from customer;

select * from orders;

drop table orders;

desc customer;

create table orders(
order_id int primary key,
amount int check(amount>100),
cust_no int,
foreign key (cust_no) references customer (cust_no)
);

insert into orders values(21,400,1),(23,211,2),(45,500,3);

create table lol(
lid int,
name char(10) default 'laugh'
);

select * from lol;

insert into lol values(1,default);


-- nested 

create table salesman(
sid int primary key,
sname char(10),
city varchar(10),
commission int
); 

drop table orders;

create table orders (
o_no int primary key,
purch_amt int,
ord_date int,
cid int,
sid int,
foreign key(sid) references salesman(sid)
);

insert into salesman values(5001,'james','ny',15),(5002,'nail','paris',13),(5005,'pit','london',11),(5006,'mc','paris',14);

insert into orders values(70001,150,'2012-05-10',3005,5002),(70009,270,'2012-10-09',3001,5005),(70002,65,'2012-05-10',3002,5006),(70004,110,'2012-08-17',3009,5002);

select * from orders;

select * from orders
where sid =
(
select sid from salesman
where sname='pit');

select * from orders
where sid =
(
select sid from salesman 
where city='london'
);

select * from orders
where sid =
(
select sid from orders
where cid=3001
);

select * from orders
where purch_amt > 
(
select avg(purch_amt) from orders
where ord_date=2012-10-05
);

--views

create table compfac(
facid int,
fname char(10),
fage int,
fadd varchar(10)
);

delete from compfac 
where facid=1;

insert into compfac values (1,'sunil',34,'virar'),(12,'john',null,null),(23,'mohak',21,'virar');

select * from compfac;

create view compfaculty as 
select facid,fname from compfac;

desc compfaculty;

insert into compfaculty values(12,'john'),(13,'none'),(52,'vipul'),(13,'mohak');

update compfaculty
set facid=21
where fname='john';

select * from compfaculty;

delete from compfaculty 
where facid=21;

alter table compfac
drop fadd;

      







 





















